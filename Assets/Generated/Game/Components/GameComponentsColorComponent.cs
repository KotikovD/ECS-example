//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.ColorComponent componentsColor { get { return (Components.ColorComponent)GetComponent(GameComponentsLookup.ComponentsColor); } }
    public bool hasComponentsColor { get { return HasComponent(GameComponentsLookup.ComponentsColor); } }

    public void AddComponentsColor(UnityEngine.Color newColor) {
        var index = GameComponentsLookup.ComponentsColor;
        var component = (Components.ColorComponent)CreateComponent(index, typeof(Components.ColorComponent));
        component.Color = newColor;
        AddComponent(index, component);
    }

    public void ReplaceComponentsColor(UnityEngine.Color newColor) {
        var index = GameComponentsLookup.ComponentsColor;
        var component = (Components.ColorComponent)CreateComponent(index, typeof(Components.ColorComponent));
        component.Color = newColor;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsColor() {
        RemoveComponent(GameComponentsLookup.ComponentsColor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsColor;

    public static Entitas.IMatcher<GameEntity> ComponentsColor {
        get {
            if (_matcherComponentsColor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsColor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsColor = matcher;
            }

            return _matcherComponentsColor;
        }
    }
}
